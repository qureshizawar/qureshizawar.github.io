tf.setBackend("webgl"),tf.ENV.set("WEBGL_CONV_IM2COL",!1);var cors_api_url="https://cors-anywhere.herokuapp.com/";let model_classifier;const status_classifier=document.getElementById("status_classifier");function classifier_file(e){if(status_classifier.textContent="Status: Fetching image...",window.File&&window.FileReader&&window.FileList&&window.Blob){var t=new FileReader;t.addEventListener("load",(function(e){const t=e.target.result;window.loadImage(t,(function(e){"error"===e.type?console.log("couldn't load image:",e):window.EXIF.getData(e,(function(){var t=window.EXIF.getTag(this,"Orientation"),n=window.loadImage.scale(e,{orientation:t||0,canvas:!0});let s=document.getElementById("inpimg0");s.src=n.toDataURL(),s.onload=()=>classifier_Demo(s)}))}))})),t.readAsDataURL(e)}else console.log("The File APIs are not fully supported in this browser.")}document.getElementById("files0").addEventListener("change",(function(e){classifier_file(e.target.files[0])})),document.getElementById("classifier_files_btn").addEventListener("click",(function(e){file=document.getElementById("files0").files[0],null==file?status_classifier.textContent="Status: File not found":classifier_file(file)})),document.getElementById("btn0").onclick=function(){status_classifier.textContent="Status: Fetching image...";let e=new URL(document.getElementById("imagename0").value);var t=new XMLHttpRequest;t.open("GET",cors_api_url+e,!0),t.responseType="blob",t.send(),t.onload=function(){var e=new FileReader;e.readAsDataURL(t.response),e.onload=e=>{let t=document.getElementById("inpimg0");t.src=e.target.result,t.onload=()=>classifier_Demo(t)}}};const ClassiferWarmup=async()=>{status_classifier.textContent="Status: Loading...",model_classifier=await tf.loadGraphModel("/assets/tfjs_model/model.json");const e=document.getElementById("inpimg0");e.complete&&0!==e.naturalHeight?(classifier_Demo(e),e.style.display=""):e.onload=()=>{classifier_Demo(e),e.style.display=""},document.getElementById("file-container").style.display=""},classifier_Demo=async e=>{status_classifier.textContent="Status: Loading image into model...";const t=tf.tidy(()=>{const t=tf.browser.fromPixels(e).toFloat(),n=tf.scalar(255),s=tf.tensor3d([.485,.456,.406],[1,1,3]),i=tf.tensor3d([.229,.224,.225],[1,1,3]),o=t.div(n).sub(s).div(i);status_classifier.textContent="Status: Model loaded! running inference",it0=performance.now();const a=o.transpose([0,1,2]).expandDims();return model_classifier.predict(a).arraySync()});it1=performance.now();var n=[];n.push(["bus",t[0][0]]),n.push(["car",t[0][1]]),n.push(["pickup",t[0][2]]),n.push(["truck",t[0][3]]),n.push(["van",t[0][4]]),n.sort((function(e,t){return t[1]-e[1]})),document.getElementById("classifier_out1").innerHTML=n[0][0]+": "+(100*n[0][1]).toFixed(2)+"%",document.getElementById("classifier_out2").innerHTML=n[1][0]+": "+(100*n[1][1]).toFixed(2)+"%",document.getElementById("classifier_out3").innerHTML=n[2][0]+": "+(100*n[2][1]).toFixed(2)+"%",status_classifier.textContent="Status: Done! inference took "+(it1-it0).toFixed(1)+" milliseconds."};ClassiferWarmup();